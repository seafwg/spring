<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
">


<!--  加载jdbc配置文件properties  -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
<!--  数据源对象  -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
<!--  jdbc模板对象  -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

<!--======================  基于xml配置的事务控制  =============================-->
<!--  ①引入tx,aop命名空间[pom中加载aspectjweaver坐标依赖]  -->
<!--  ②注入dao层  [service要调用] -->
    <bean id="accountDao" class="com.seafwg.xmltx.dao.impl.AccountDaoImpl">
        <!--    dao层注入jdbc属性    -->
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>
<!--  ③service层 目标对象：内部方法也就是切点 service层业务逻辑操作转出，转入的方法，也就是要增强的切点 -->
    <bean id="accountService" class="com.seafwg.xmltx.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>
<!--  ④配置平台事务管理器 必选项，针对于数据源配置  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--  ⑤配置通知 事务的增强 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--    设置事务的属性信息    -->
        <tx:attributes>
            <!-- *表设默认属性  -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
<!--  ⑥配置事务aop织入  -->
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.seafwg.xmltx.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>
        <!--  <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.seafwg.xmltx.service.impl.*.*(..))"></aop:advisor>-->
    </aop:config>
</beans>