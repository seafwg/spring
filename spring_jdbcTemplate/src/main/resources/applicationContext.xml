<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
">


<!--  加载jdbc配置文件properties  -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
<!--  数据源对象  -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
<!--  jdbc模板对象  -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

<!--======================  基于xml配置的事务控制  =============================-->
<!--&lt;!&ndash;  ①引入tx,aop命名空间[pom中加载aspectjweaver坐标依赖]  &ndash;&gt;-->
<!--&lt;!&ndash;  ②注入dao层  [service要调用] &ndash;&gt;-->
<!--    <bean id="accountDao" class="com.seafwg.xmltx.dao.impl.AccountDaoImpl">-->
<!--        &lt;!&ndash;    dao层注入jdbc属性    &ndash;&gt;-->
<!--        <property name="jdbcTemplate" ref="jdbcTemplate"></property>-->
<!--    </bean>-->
<!--&lt;!&ndash;  ③service层 目标对象：内部方法也就是切点 service层业务逻辑操作转出，转入的方法，也就是要增强的切点 &ndash;&gt;-->
<!--    <bean id="accountService" class="com.seafwg.xmltx.service.impl.AccountServiceImpl">-->
<!--        <property name="accountDao" ref="accountDao"></property>-->
<!--    </bean>-->
<!--&lt;!&ndash;  ④配置平台事务管理器 必选项，针对于数据源配置  &ndash;&gt;-->
<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSource"></property>-->
<!--    </bean>-->
<!--&lt;!&ndash;  ⑤配置通知 事务的增强 &ndash;&gt;-->
<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--        &lt;!&ndash;    设置事务的属性信息    &ndash;&gt;-->
<!--        <tx:attributes>-->
<!--            &lt;!&ndash; *表设默认属性  &ndash;&gt;-->
<!--            <tx:method name="*"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->
<!--&lt;!&ndash;  ⑥配置事务aop织入  &ndash;&gt;-->
<!--    <aop:config>-->
<!--        <aop:pointcut id="txPointcut" expression="execution(* com.seafwg.xmltx.service.impl.*.*(..))"/>-->
<!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>-->
<!--        &lt;!&ndash;  <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.seafwg.xmltx.service.impl.*.*(..))"></aop:advisor>&ndash;&gt;-->
<!--    </aop:config>-->
<!--======================  基于xml配置的事务控制  =============================-->


<!--======================  基于注解anno配置的事务控制  =============================-->
<!--  ①配置组件扫描 [controller无法加载]  -->
    <context:component-scan base-package="com.seafwg.annotx"/>
<!--  ②配置事务的注解驱动  -->
    <tx:annotation-driven></tx:annotation-driven>
<!--  配置平台事务管理器 必选项，针对于数据源配置  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--======================  基于注解anno配置的事务控制  =============================-->
</beans>